### A Pluto.jl notebook ###
# v0.12.21

using Markdown
using InteractiveUtils

# ╔═╡ 3ee60520-77b5-11eb-1637-1dbc44a524c3
begin
	using AlgebraPDF
	using Plots
	using QuadGK
end

# ╔═╡ c60aa2a0-77af-11eb-1e73-01953f2f9db6
md"""
# BIO: Mikhail Mikhasenko

##### Study of the exotic matter formation via the resonance phenomena of strong interaction

### Exp. physics
 - VES experiment (IHEP, Russia): MIPT group, Moscow
 - COMPASS experiment (CERN, Switzerland): HISKP, Bonn group, Germany
 - LHCb experiment (CERN, Switzerland): CERN group

### Th. physics:
 - JPAC collaboration

### Fields of expertise:
 - Light-meson spectroscopy
 - Heavy-flavour spectroscopy
 - Amplitude analysis, Angular analysis, Partial-Wave Analysis

`https://github.com/mmikhasenko`
"""

# ╔═╡ 1bda7332-77b1-11eb-0657-890e543debe1
md"""
# My questions to the ODSL group

 - How the collaboration work?
 - What are successful examples of the collaboration with the practicians?
 - How the work of ODSL can be recognized by exp. collaborations
   * citations of the software packages
   * affiliated membership and authorship
   * something else

 - Directions of research (what can we do together?)
   * Baysian analysis in HEP (`BAT.jl`, novel to HEP)
   * ??? development analysis tools, e.g. `SciPy.org`
   * ??? enriching `Julia` ecosystem
"""

# ╔═╡ 3d5fbaa0-77b2-11eb-3b00-51d1f25d7780
md"""
# Enriching Julia ecosystem

A lot to do: currently `julia` purely adopted to HEP needs, and largely unexplored

### Fitting
 - Construction of PDFs
   * arbitrary function -> pdf (normalization!)
   * SumPDF
   * ConvPDF (FFT)
 - Fitting distributions:
   * Binned to distribution
   * Unbinned LLH
   * Extended LLH
 - Error calculations
   * Hessian
   * LLH scan, profile LLH
 - Plotting
   * histograms, weighted histograms
   * binomial errors on histograms
 - sWeights and sPlot

### Data-manupulation tools
 - Data storage format (IO)
   * trees, table
 - NN practices:
   * BDT

### Analysis workflow
 - data provinence
 - continuous intergation
 - pipelines
 - preservation

"""

# ╔═╡ d7e7caa0-7824-11eb-3a49-4d1c8769633d
md"""
# Julia packages under my development:
While working on data analysis in LHCb and COMPASS,
I have initiated several packages dedicated to HEP
 - `AlgebraPDF.jl` [github](https://github.com/mmikhasenko/AlgebraPDF.jl): fitting likelihood, parameter manipulations
 - `PartialWaveFunctions.jl` [github](https://github.com/mmikhasenko/PartialWaveFunctions.jl): Wigner D-functions, Clebsch-Gordan coefficints
 - `FourVectors.jl` [github](https://github.com/mmikhasenko/FourVectors.jl): Lorentz Vectors
 - `ThreeBodyDecay.jl` [github](https://github.com/mmikhasenko/ThreeBodyDecay.jl): Dalitz Plot analysis
"""

# ╔═╡ 3a235810-7825-11eb-3112-551b5ca7d08c
md"""
# `AlgebraPDF` : tools for constucting PDFs
""" 

# ╔═╡ 570030a0-7827-11eb-0322-fd885cdfcdac
md"""
## regular 1D function
"""

# ╔═╡ 5303c090-7825-11eb-01ba-192971bdd14e
function pdfGauss4(p, lims)
    μ, σ = keys(p)
    return pdf(
		(x;p)->exp.( # function
				-(x .- getproperty(p,μ)) .^ 4 ./ (2*getproperty(p,σ))^4),
		p,    # parameters
		lims) # limits
end

# ╔═╡ 53cbd4de-780c-11eb-352f-cf098dd845f5
s1,s2,s3 =
	pdfGauss4((μ1=1.1, σ1=0.9 ), (-1,4)),
	pdfGauss4((μ2=0.4, σ2=0.15), (-1,4)),
	pdfGauss4((μ3=1.7, σ3=0.35), (-1,4));

# ╔═╡ 17f5f3c0-77b6-11eb-34b0-dd9c0e9bc0f2
begin
	plot()
	plot!.([s1,s2,s3], 1, 300)
	plot!()
end

# ╔═╡ 636e99b0-7833-11eb-13a5-0f004fe2812d
s1(0.1), # default parameters
s1(0.1; p=(μ1=1.1,σ1=2.2)),
s1(0.1, [1.1,2.2]) 

# ╔═╡ d6b98400-7849-11eb-3ea5-0b0238d7bea5
md"""
## Computing CDF
"""

# ╔═╡ d81ae590-7845-11eb-08bc-37d3b269ec86
function cdf(d::AbstractFunctionWithParameters; p=pars(d))
	c(y) = quadgk(x->func(s2)(x; p),lims(d)[1], y)[1]
	y->c.(y) ./ AlgebraPDF.normalizationintegral(s2)
end

# ╔═╡ a239d360-7844-11eb-24d0-4f8a2938fbb1
g = cdf(s2)

# ╔═╡ c8048220-7844-11eb-3e1c-5b6143b824d9
plot(g, -1, 4, title = "CDF", lab="")

# ╔═╡ cd011c90-7824-11eb-3e4a-ad79b9c5f2b4
md"""
## Sum PDF
"""

# ╔═╡ 06ab94d0-7810-11eb-2abf-57b449ea4889
mm = MixedModel([s1,s2,s3], (f1=0.5, f2=0.3))

# ╔═╡ 4a7b5a60-7810-11eb-101e-f1a9a294bca3
begin fs = fractionvalues(mm)
	plot( mm.components[1], fs[1], 300, fill=0, α=0.3, lab="", l=false)
	plot!(mm.components[2], fs[2], 300, l=(2,:black), lab="")
	plot!(mm.components[3], fs[3], 300, l=(2,:black), lab="")
	plot!(mm, 1, 300, l=(:red, 2), lab="")
end

# ╔═╡ 1c74ab30-7810-11eb-15b8-1b9f8b3fa92a
keys(freepars(pars(mm)))

# ╔═╡ 11461cae-7826-11eb-17db-2f6030e878a6
md"""
## Sample data from a PDF
"""

# ╔═╡ d534e4d0-7812-11eb-1ad5-f1f3577824a1
data = generate(10_000, mm)

# ╔═╡ 9cf1cc20-7824-11eb-1a0e-09eac60cd606
md"""
## Fitting, manipulating parameters
"""

# ╔═╡ 96c61dd0-7813-11eb-2444-0df8e9e2bcef
mm_f = fixpars(mm, (:μ1,:μ2,:μ3));

# ╔═╡ e3c27ad0-7812-11eb-204a-ddca9a5f0474
begin
	plot(mm_f, scaletobinneddata(length(data), lims(mm_f), 100), lw=2, lab="model")
	stephist!(data, bins=100, lab="data", lc=:black)
end

# ╔═╡ 008833d2-7813-11eb-2bc4-43ecae726de9
fr = fit_llh(data, mm_f);

# ╔═╡ 1e07aa70-7814-11eb-02f5-93a72042891f
ms = v2p(measurements(fr), mm_f)

# ╔═╡ 0d5cf140-784a-11eb-1320-8d66e3b53524
begin
	plot(1:length(ms),
		collect(ms)-collect(freepars(mm_f)),
		xticks=(1:5, keys(ms)), l=false, frame=:box, lab="", m=(:o,:black,4),
		title="fit results", xlab="parameters", ylab="Δvalue ± err")
	hline!([0], lab="")
end

# ╔═╡ Cell order:
# ╟─c60aa2a0-77af-11eb-1e73-01953f2f9db6
# ╟─1bda7332-77b1-11eb-0657-890e543debe1
# ╟─3d5fbaa0-77b2-11eb-3b00-51d1f25d7780
# ╟─d7e7caa0-7824-11eb-3a49-4d1c8769633d
# ╟─3a235810-7825-11eb-3112-551b5ca7d08c
# ╠═3ee60520-77b5-11eb-1637-1dbc44a524c3
# ╟─570030a0-7827-11eb-0322-fd885cdfcdac
# ╠═5303c090-7825-11eb-01ba-192971bdd14e
# ╠═53cbd4de-780c-11eb-352f-cf098dd845f5
# ╟─17f5f3c0-77b6-11eb-34b0-dd9c0e9bc0f2
# ╠═636e99b0-7833-11eb-13a5-0f004fe2812d
# ╟─d6b98400-7849-11eb-3ea5-0b0238d7bea5
# ╠═d81ae590-7845-11eb-08bc-37d3b269ec86
# ╠═a239d360-7844-11eb-24d0-4f8a2938fbb1
# ╠═c8048220-7844-11eb-3e1c-5b6143b824d9
# ╟─cd011c90-7824-11eb-3e4a-ad79b9c5f2b4
# ╠═06ab94d0-7810-11eb-2abf-57b449ea4889
# ╠═4a7b5a60-7810-11eb-101e-f1a9a294bca3
# ╠═1c74ab30-7810-11eb-15b8-1b9f8b3fa92a
# ╟─11461cae-7826-11eb-17db-2f6030e878a6
# ╠═d534e4d0-7812-11eb-1ad5-f1f3577824a1
# ╟─e3c27ad0-7812-11eb-204a-ddca9a5f0474
# ╟─9cf1cc20-7824-11eb-1a0e-09eac60cd606
# ╠═96c61dd0-7813-11eb-2444-0df8e9e2bcef
# ╠═008833d2-7813-11eb-2bc4-43ecae726de9
# ╠═1e07aa70-7814-11eb-02f5-93a72042891f
# ╟─0d5cf140-784a-11eb-1320-8d66e3b53524
